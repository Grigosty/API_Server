Программные решения

1. Приложение имеет как серверную, так и клиентскую часть.
    Такое разделение было выбрано для увеличения функциональности и повышения UX.
2. Приложение понятийно разбито на два пакета (по-сути один, но для удобства функционал разбит по двум файлам)
Первый main.go - Запускает хэндлеры и отсылает пользователям шаблоны .tmpl
Второй dbCon.go - Отвечает за связь с базой данных, контролирует запись и извлечение из будет
3. Работа с коммандами
3.1. Пользователь имеет возможность писать свою команду в виде текста или загружать при помощи файла
3.2. Каждая команда проходит через промежуточный файл на сервере, после чего запускается
3.3. Функционал поддерживает запуск и остановку длинных команд. 
Запускать команды можно с API localhost:2020/Command/Create
Остановка команд возможна из интерфейса конкретной команды
Для поиска запущенной команды необходимо перейти по API localhost:2020/Command/All,
После чего найти id необходимой команды, ввести в поле поиска и нажать на кнопку перехода.
3.4. Динамический вывод
Функционал поддерживает динамический вывод только при перезагрузке страницы. Т.Е. 
При переходе на страницу нужной команды можно ее обновить и увидеть как она выполняется.
На этой же странице с API localhost:2020/Command/id можно остановить команду.
3.5. Жизненный путь команды
При запуске на сервер уходит текст/файл с командой.
При запросе на остановку в канал помещается id команды, которую необходимо остановить.
При помощи select-case происходит отбор таких id. Скрипт проверяет его ли id он получил.
Если да - остановка, если нет - отправка на второй-третий и так далее круги.